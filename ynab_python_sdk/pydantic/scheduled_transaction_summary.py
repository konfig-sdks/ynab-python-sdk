# coding: utf-8

"""
    YNAB API Endpoints

    Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com

    The version of the OpenAPI document: 1.68.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from ynab_python_sdk.pydantic.transaction_flag_color import TransactionFlagColor
from ynab_python_sdk.pydantic.transaction_flag_name import TransactionFlagName

class ScheduledTransactionSummary(BaseModel):
    id: str = Field(alias='id')

    # The first date for which the Scheduled Transaction was scheduled.
    date_first: date = Field(alias='date_first')

    # The next date for which the Scheduled Transaction is scheduled.
    date_next: date = Field(alias='date_next')

    frequency: Literal["never", "daily", "weekly", "everyOtherWeek", "twiceAMonth", "every4Weeks", "monthly", "everyOtherMonth", "every3Months", "every4Months", "twiceAYear", "yearly", "everyOtherYear"] = Field(alias='frequency')

    # The scheduled transaction amount in milliunits format
    amount: int = Field(alias='amount')

    account_id: str = Field(alias='account_id')

    # Whether or not the scheduled transaction has been deleted.  Deleted scheduled transactions will only be included in delta requests.
    deleted: bool = Field(alias='deleted')

    memo: typing.Optional[typing.Optional[str]] = Field(None, alias='memo')

    flag_color: typing.Optional[TransactionFlagColor] = Field(None, alias='flag_color')

    flag_name: typing.Optional[TransactionFlagName] = Field(None, alias='flag_name')

    payee_id: typing.Optional[typing.Optional[str]] = Field(None, alias='payee_id')

    category_id: typing.Optional[typing.Optional[str]] = Field(None, alias='category_id')

    # If a transfer, the account_id which the scheduled transaction transfers to
    transfer_account_id: typing.Optional[typing.Optional[str]] = Field(None, alias='transfer_account_id')
    class Config:
        arbitrary_types_allowed = True
